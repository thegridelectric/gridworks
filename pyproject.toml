[tool.poetry]
name = "gridworks"
version = "1.3.1"

description = "Gridworks"
authors = ["GridWorks <gridworks@gridworks-consulting.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/thegridelectric/gridworks"
repository = "https://github.com/thegridelectric/gridworks"
documentation = "https://gridworks.readthedocs.io"
packages = [
    { include = "gw", from = "src" },
    { include = "gw_test", from = "src" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
]

[tool.poetry.urls]
Changelog = "https://github.com/thegridelectric/gridworks/releases"

[tool.poetry.dependencies]
python = ">=3.11, <4.0"
python-dotenv = ">=1.0.0"
pydantic = "^2.8.0"


[tool.poetry.dev-dependencies]
pytest-asyncio = "^0.20.3"
Pygments = ">=2.10.0"
coverage = {extras = ["toml"], version = ">=6.2"}
# darglint = ">=1.8.1"
furo = ">=2021.11.12"
mypy = ">=0.930"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=6.2.5"
pyupgrade = ">=2.29.1"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}
myst-parser = {version = ">=0.16.1"}
sphinx-rtd-theme = "^1.1.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.6"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["gridworks", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 50

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = false
show_column_numbers = true
show_error_codes = true
show_error_context = false
show_absolute_path = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".nox",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    ".idea",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
